<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operation on 42th openheart</title>
    <link>https://www.openheart.icu/tags/operation/</link>
    <description>Recent content in Operation on 42th openheart</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ALL RIGHTS RESERVED KRIS NIE</copyright>
    <lastBuildDate>Sun, 19 Jul 2020 12:50:56 +0000</lastBuildDate>
    
	<atom:link href="https://www.openheart.icu/tags/operation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DNS</title>
      <link>https://www.openheart.icu/technical/dns/</link>
      <pubDate>Sun, 19 Jul 2020 12:50:56 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/dns/</guid>
      <description>DNSPod DNS+ ​ 首选：119.29.29.29
​ 备选：182.254.116.116
114DNS ​ 首选：114.114.114.114
​ 备选：114.114.114.115
阿里 AliDNS ​ 首选：223.5.5.5
​ 备选：223.6.6.6
DNS派 ​ 首选（电信/移动/铁通）：101.226.4.6
​ 备选（电信/移动/铁通）：218.30.118.6
​ 首选（联通）：123.125.81.6
​ 备选（联通）：140.207.198.6
百度 BaiduDNS ​ 首选：180.76.76.76
CNNIC SDNS ​ 首选：1.2.4.8
​ 备选：202.98.0.68
OpenDNS ​ 208.67.222.222
​ 208.67.220.220
​ 208.67.222.220
​ 208.67.220.222
Family Shield Servers 可以阻挡成人网站和含有恶意网站
​ 208.67.222.123
​ 208.67.220.123
IPv6地址(实验) ​ 2620:0:ccc::2
​ 2620:0:ccd::2</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://www.openheart.icu/technical/git/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/git/</guid>
      <description>idea设置git idea -&amp;gt;VSC -&amp;gt;Create Git Repository 右击工程文件 -&amp;gt;git-&amp;gt;add 右击工程文件 -&amp;gt;git-&amp;gt;commit
git remote add origin git@github.com:Hyominn/java_demo.git git pull git@github.com:Hyominn/java_demo.git git add . dir # 查看有哪些文件夹 git rm -r --cached target # 删除target文件夹 git commit –m &amp;#34;版本更新信息&amp;#34; git push git@github.com:Hyominn/java_demo.git 设置git代理 git config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 git config --global http.proxy &amp;#39;socks5://127.0.0.1:1080&amp;#39; git config --global https.proxy &amp;#39;socks5://127.0.0.1:1080&amp;#39; git config --global --unset http.proxy git config --global --unset https.proxy npm config delete proxy 遇到pull不下来 git reset --hard FETCH_HEAD git clone https://www.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://www.openheart.icu/technical/hugo/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/hugo/</guid>
      <description>Install tar -zxvf ./hugo_0.74.1_Linux-64bit.tar.gz cp ./hugo /usr/local/bin/ hugo new site site42 cd site42 hugo version rm -r public hugo server -b &amp;#34;https://openheart.icu:1313/&amp;#34; -p 1313 --bind &amp;#34;0.0.0.0&amp;#34; #mac 安装 brew install hugo # show the location of the hugo executable which hugo # show the installed version ls -l $( which hugo ) #lrwxr-xr-x 1 hyomin admin 30 7 17 22:46 /usr/local/bin/hugo -&amp;gt; ../Cellar/hugo/0.74.1/bin/hugo # verify that hugo runs correctly hugo version Hugo Static Site Generator v0.</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://www.openheart.icu/technical/linux/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/linux/</guid>
      <description>chown -R nginx:users ./* # 查看当前文件夹下权限 ls -l netstat -npa | grep 9000 # 查看当前路径 pwd # 安装git yum -y install git </description>
    </item>
    
    <item>
      <title>Mac Operation</title>
      <link>https://www.openheart.icu/technical/mac/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/mac/</guid>
      <description>brew使用国内镜像源（不好使） 中科大：
# 步骤一 cd &amp;#34;$(brew --repo)&amp;#34; git remote set-url origin https:*//mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git* # 步骤二 cd &amp;#34;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;#34; git remote set-url origin https:*//mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git* #步骤三 brew update 复原：
cd &amp;#34;$(brew --repo)&amp;#34; git remote set-url origin https://github.com/Homebrew/brew.git cd &amp;#34;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;#34; git remote set-url origin https://github.com/Homebrew/homebrew-core brew update 配置item2代理 # 打开配置文件 vim ~/.bash_profile # 如果用了`oh-my-zsh` 那么修改`~/.zshrc` # 在后面新增配置 export http_proxy=http://127.0.0.1:1087 export https_proxy=$http_proxy # 同理，可能执行 source ~/.zshrc source ~/.bash_profile </description>
    </item>
    
    <item>
      <title>MySQL</title>
      <link>https://www.openheart.icu/technical/mysql/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/mysql/</guid>
      <description>Install MySQL 准备操作 lsb_release -a	# 查看操作系统版本 # LSB Version:	:core-4.1-amd64:core-4.1-noarch # Distributor ID:	CentOS # Description:	CentOS Linux release 7.8.2003 (Core) # Release:	7.8.2003 # Codename:	Core cat /etc/redhat-release	# 查看Linux内核版本 # CentOS Linux release 7.8.2003 (Core) getconf LONG_BIT	# 查看系统位数 # 64 yum -y update	# 更新 yum rpm -qa | grep mysql	# 查看是否安装过MySQL 安装MySQL # 此处版本为在CentOS7下安装MySQL8.0 wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm # 安装 sudo yum localinstall mysql80-community-release-el7-3.noarch.rpm # 此时检查是否安装过 rpm -qa | grep mysql 显示：（端口默认为80） #mysql80-community-release-el7-3.</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://www.openheart.icu/technical/nginx/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/nginx/</guid>
      <description>Common Operation $sudo nginx sudo pkill -f nginx &amp;amp; wait $! sudo systemctl start nginx sudo systemctl restart nginx nginx -c /etc/nginx/nginx.conf # 重启服务 设置二级域名 server{listen80;server_namesite42.openheart.icu;location/{root/usr/project/openheart;}}强制浏览器使用本地缓存 cache-control/expires
# nginx.conf 中配置location~.</description>
    </item>
    
    <item>
      <title>PHP</title>
      <link>https://www.openheart.icu/technical/php/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/php/</guid>
      <description>Operation systemctl start php-fpm systemctl restart php-fpm service php-fpm start service php-fpm restart service php-fpm stop service php-fpm reload Problem 1.如果是使用nginx，需要去修改一下www.conf中的用户与用户组
user = nginx group = users </description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>https://www.openheart.icu/technical/vim/</link>
      <pubDate>Wed, 15 Jul 2020 23:28:00 +0000</pubDate>
      
      <guid>https://www.openheart.icu/technical/vim/</guid>
      <description># 退出编辑模式，输入以下命令： Esc # 保存后退出vi，若为 :wq! 则为强制储存后退出（常用） :wq # 保存但不退出（常用） :w # 若文件属性为『只读』时，强制写入该档案 :w! # 离开 vi （常用） :q # 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。 :q! # 将档案还原到最原始的状态！ :e! </description>
    </item>
    
  </channel>
</rss>